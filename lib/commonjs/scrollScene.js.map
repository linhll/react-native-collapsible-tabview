{"version":3,"sources":["scrollScene.tsx"],"names":["scrollScene","ref","offset","animated","scrollToOffset","scrollTo","y"],"mappings":";;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMA,WAAW,GAAG,CAAC;AACnBC,EAAAA,GADmB;AAEnBC,EAAAA,MAFmB;AAGnBC,EAAAA;AAHmB,CAAD,KAQR;AACV,MAAIF,GAAJ,aAAIA,GAAJ,eAAIA,GAAG,CAAEG,cAAT,EAAyB;AACvBH,IAAAA,GAAG,CAACG,cAAJ,CAAmB;AACjBF,MAAAA,MADiB;AAEjBC,MAAAA;AAFiB,KAAnB;AAID,GALD,MAKO,IAAIF,GAAJ,aAAIA,GAAJ,eAAIA,GAAG,CAAEI,QAAT,EAAmB;AACxBJ,IAAAA,GAAG,CAACI,QAAJ,CAAa;AACXC,MAAAA,CAAC,EAAEJ,MADQ;AAEXC,MAAAA;AAFW,KAAb;AAID;AACF,CApBD;;eAsBeH,W","sourcesContent":["import type { ScrollRef } from './types';\n\n/**\n * Utility function to perform scroll on:\n * - FlatList\n * - ScrollView\n */\nconst scrollScene = ({\n  ref,\n  offset,\n  animated,\n}: {\n  ref?: ScrollRef;\n  offset: number;\n  animated: boolean;\n}): void => {\n  if (ref?.scrollToOffset) {\n    ref.scrollToOffset({\n      offset,\n      animated,\n    });\n  } else if (ref?.scrollTo) {\n    ref.scrollTo({\n      y: offset,\n      animated,\n    });\n  }\n};\n\nexport default scrollScene;\n"]}