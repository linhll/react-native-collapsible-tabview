{"version":3,"sources":["CollapsibleTabViewContext.tsx"],"names":["React","createContext","ctx","undefined","useCtx","c","useContext","Error","Provider","useCollapsibleContext","CollapsibleContextProvider"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAQA;AACA;AACA;AACA;AACA,SAASC,aAAT,GAA0C;AACxC,QAAMC,GAAG,gBAAGF,KAAK,CAACC,aAAN,CAAmCE,SAAnC,CAAZ;;AACA,WAASC,MAAT,GAAqB;AACnB,UAAMC,CAAC,GAAGL,KAAK,CAACM,UAAN,CAAiBJ,GAAjB,CAAV;AACA,QAAI,CAACG,CAAL,EAAQ,MAAM,IAAIE,KAAJ,CAAU,+CAAV,CAAN;AACR,WAAOF,CAAP;AACD,GANuC,CAOxC;;;AACA,SAAO,CAACD,MAAD,EAASF,GAAG,CAACM,QAAb,CAAP;AACD;;AACD,MAAM,CAACC,qBAAD,EAAwBC,0BAAxB,IAAsDT,aAAa,EAAzE;AAIA,SAASQ,qBAAT,EAAgCC,0BAAhC,EAA4DT,aAA5D","sourcesContent":["import React from 'react';\nimport type { CollapsibleContext } from './types';\n\ntype CreateCtx<A> = readonly [\n  () => A,\n  React.ProviderExoticComponent<React.ProviderProps<A | undefined>>\n];\n\n// utility function from\n// https://github.com/dooboolab/expo-relay-boilerplate/blob/master/src/utils/createCtx.ts\n// create context with no upfront defaultValue\n// without having to do undefined check all the time\nfunction createContext<A>(): CreateCtx<A> {\n  const ctx = React.createContext<A | undefined>(undefined);\n  function useCtx(): A {\n    const c = React.useContext(ctx);\n    if (!c) throw new Error('useCtx must be inside a Provider with a value');\n    return c;\n  }\n  // make TypeScript infer a tuple, not an array of union types\n  return [useCtx, ctx.Provider] as const;\n}\nconst [useCollapsibleContext, CollapsibleContextProvider] = createContext<\n  CollapsibleContext\n>();\n\nexport { useCollapsibleContext, CollapsibleContextProvider, createContext };\n"]}